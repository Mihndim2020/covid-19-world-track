{"version":3,"sources":["redux/countries/countries.js","img/back.svg","components/Navbar.js","img/right-arrow.svg","components/Country.js","components/Home.js","components/Region.js","components/Details.js","App.js","redux/configureStore.js","index.js"],"names":["LOAD","REQUEST","LOAD_COUNTRY","BACK_HOME","initialState","loading","countries","total","countrySelected","undefined","loadCountry","payload","type","backHome","fetchCountries","dispatch","date","Date","toISOString","replace","axios","get","then","res","Object","entries","data","dates","filteredWithRegions","filter","country","regions","length","filteredWithoutRegions","obj","concat","map","catch","error","countriesReducer","state","action","Navbar","useDispatch","useSelector","className","to","onClick","src","back","alt","width","Country","id","value","name","toUpperCase","today_confirmed","today_deaths","rightArrow","Home","useEffect","Region","region","Details","match","window","scrollTo","find","toString","params","r","App","path","component","from","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.494cd03e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst LOAD = 'react-capstone/countries/LOAD';\nconst REQUEST = 'react-capstone/countries/REQUEST';\nconst LOAD_COUNTRY = 'react-capstone/countries/LOAD_COUNTRY';\nconst BACK_HOME = 'react-capstone/countries/BACK_HOME';\n\nconst initialState = {\n  loading: false,\n  countries: [],\n  total: {},\n  countrySelected: undefined,\n};\n\nconst countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        loading: false,\n        countries: action.payload.countries,\n        total: action.payload.total,\n      };\n\n    case REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOAD_COUNTRY:\n      return {\n        ...state,\n        countrySelected: action.payload,\n      };\n\n    case BACK_HOME:\n      return {\n        ...state,\n        countrySelected: undefined,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const loadCountries = (payload) => ({\n  type: LOAD,\n  payload,\n});\n\nexport const requestCountries = () => ({\n  type: REQUEST,\n});\n\nexport const loadCountry = (payload) => ({\n  type: LOAD_COUNTRY,\n  payload,\n});\n\nexport const backHome = () => ({\n  type: BACK_HOME,\n});\n\nexport const fetchCountries = () => (dispatch) => {\n  dispatch(requestCountries());\n  const date = new Date().toISOString().replace(/T.*/, '');\n  axios\n    .get(`https://api.covid19tracking.narrativa.com/api/${date}`)\n    .then((res) => {\n      const countries = Object.entries(res.data.dates[date].countries);\n      const filteredWithRegions = countries.filter(\n        (country) => country[1].regions.length !== 0,\n      );\n      const filteredWithoutRegions = countries.filter(\n        (country) => country[1].regions.length === 0,\n      );\n      const filtered = filteredWithRegions.concat(filteredWithoutRegions);\n      const mapped = filtered.map((country) => country[1]);\n      const obj = {\n        countries: mapped,\n        total: res.data.total,\n      };\n      dispatch(loadCountries(obj));\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport default countriesReducer;\n","export default __webpack_public_path__ + \"static/media/back.6609a556.svg\";","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { backHome } from '../redux/countries/countries';\nimport back from '../img/back.svg';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const countrySelected = useSelector(\n    (state) => state.countries.countrySelected,\n  );\n\n  if (countrySelected) {\n    return (\n      <header>\n        <nav>\n          <Link\n            className=\"back-button\"\n            to=\"/home\"\n            onClick={() => {\n              dispatch(backHome());\n            }}\n          >\n            <img src={back} alt=\"Logo\" width=\"30\" />\n          </Link>\n          <Link\n            to=\"/home\"\n            onClick={() => {\n              dispatch(backHome());\n            }}\n          >\n            <h1>Covid-19 World Track</h1>\n          </Link>\n        </nav>\n      </header>\n    );\n  }\n  return (\n    <header>\n      <nav>\n        <Link\n          to=\"/home\"\n          onClick={() => {\n            dispatch(backHome());\n          }}\n        >\n          <h1>Covid-19 World Track</h1>\n        </Link>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/right-arrow.df0dac5b.svg\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loadCountry } from '../redux/countries/countries';\nimport rightArrow from '../img/right-arrow.svg';\n\nconst Country = ({ country }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className=\"country\">\n      <Link\n        key={country.id}\n        to={`/details/${country.id}`}\n        onClick={() => {\n          dispatch(loadCountry(true));\n        }}\n        value={country.id}\n      >\n        {country.name.length > 10 && (\n          <h2 className=\"long-name\">{country.name.toUpperCase()}</h2>\n        )}\n        {country.name.length <= 10 && (\n          <h2 className=\"short-name\">{country.name.toUpperCase()}</h2>\n        )}\n\n        <h3>\n          {'Confirmed Cases: '}\n          <br />\n          {country.today_confirmed}\n        </h3>\n        <h3>\n          {'Confirmed Deaths: '}\n          <br />\n          {country.today_deaths}\n        </h3>\n        <span className=\"right-arrow\">\n          <img src={rightArrow} alt=\"\" width=\"25\" />\n        </span>\n      </Link>\n    </li>\n  );\n};\n\nexport default Country;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCountries, loadCountry } from '../redux/countries/countries';\nimport Country from './Country';\n\nconst Home = () => {\n  const countries = useSelector((state) => state.countries.countries);\n  const loading = useSelector((state) => state.countries.loading);\n  const total = useSelector((state) => state.countries.total);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (countries.length === 0) {\n      dispatch(fetchCountries());\n    }\n    dispatch(loadCountry(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {total && (\n        <main>\n          <h2>WORLD</h2>\n          <h3>\n            {'Confirmed Cases: '}\n            {total.today_confirmed || 'loading'}\n          </h3>\n          <h3>\n            {'Confirmed Deaths: '}\n            {total.today_deaths || 'loading'}\n          </h3>\n        </main>\n      )}\n      <section>\n        <h4>STATS BY COUNTRY</h4>\n        {loading && <h2>loading...</h2>}\n        <ul className=\"countries\">\n          {countries.map((country) => (\n            <Country key={country.id} country={country} />\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Region = ({ region }) => (\n  <li>\n    <h2>{region.name}</h2>\n    <div className=\"region-confirmed\">\n      <h3>\n        {'Confirmed Cases: '}\n        <br />\n        {region.today_confirmed}\n      </h3>\n      <h3>\n        {'Confirmed Deaths: '}\n        <br />\n        {region.today_deaths}\n      </h3>\n    </div>\n  </li>\n);\n\nexport default Region;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCountries, loadCountry } from '../redux/countries/countries';\nimport Region from './Region';\n\nconst Details = ({ match }) => {\n  const countries = useSelector((state) => state.countries.countries);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (countries.length === 0) {\n      dispatch(fetchCountries());\n    }\n    dispatch(loadCountry(true));\n  }, []);\n\n  const country = countries.find(\n    (country) => country.id.toString() === match.params.id.toString(),\n  );\n\n  if (countries.length === 0) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"container\">\n      <main>\n        <h2>{country.name.toUpperCase()}</h2>\n        <h3>\n          {'Confirmed Cases: '}\n          {country.today_confirmed}\n        </h3>\n        <h3>\n          {'Confirmed Deaths: '}\n          {country.today_deaths}\n        </h3>\n      </main>\n      <section>\n        <h4>STATS BY REGIONS</h4>\n        <ul className=\"regions\">\n          {country.regions.map((r) => (\n            <Region key={r.name} region={r} />\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport {\n  Route,\n  HashRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Details from './components/Details';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/details/:id\" component={Details} />\n        <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport countriesReducer from './countries/countries';\n\nexport const rootReducer = combineReducers({ countries: countriesReducer });\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}